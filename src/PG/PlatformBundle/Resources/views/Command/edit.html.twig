{% extends "PGPlatformBundle::layout.html.twig" %}

{% block stylesheets %}
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/css/bootstrap-datepicker.min.css">
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/css/bootstrap-datepicker3.min.css">
{% endblock %}

{% block pgplatform_body %}

    <h2>Modifier une commande</h2>

    {{ include("PGPlatformBundle:Command:form.html.twig") }}

{% endblock %}

{% block javascripts %}
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/locales/bootstrap-datepicker.fr.min.js"></script>

    <script type="text/javascript">
        var $tableRef;

        jQuery(document).ready(function () {
            initDatePicker();

            // Get the table that holds the collection of products
            $tableRef = document.getElementById('command-products-list').getElementsByTagName('tbody')[0];

            displayFilledInventory();
        });

        function initDatePicker() {
            var date = new Date(Date.now()).toLocaleString();

            $('.datepicker').datepicker({
                format: "dd-mm-yyyy",
                todayBtn: "linked",
                language: "fr",
                autoclose: true,
                todayHighlight: true,
                startDate: date
            });
        }

        function displayFilledInventory() {
            {% for product in products %}
            {% set quantity = 0 %}
            {% set break = false %}

            {% for productCommand in productCommands if not break %}

            {% if product == productCommand.getProduct() %}
            {% set quantity = productCommand.getQuantity() %}
            {% set break = true %}
            {% endif %}

            {% endfor %}

            addProductCommandForm($tableRef, {{ product.getId() }}, '{{ product.getName() }}', {{ quantity }});
            {% endfor %}
        }

        function addProductCommandForm($tableRef, $id, $productName, $quantity) {

            var newProductForm = buildNewProductForm($id, $quantity);

            // Insert a row in the table at the last row
            var newRow = $tableRef.insertRow($tableRef.rows.length);

            // Insert a cell in the row at index 0
            var cellProductLabel = newRow.insertCell(0);

            var divProductLabel = document.createElement("div");
            var productLabel = document.createTextNode($productName);
            divProductLabel.appendChild(productLabel);
            cellProductLabel.appendChild(divProductLabel);

            var cellProductQuantity = newRow.insertCell(1);
            var divProductQuantity = document.createElement("div");
            divProductQuantity.innerHTML = newProductForm;
            cellProductQuantity.appendChild(divProductQuantity);
        }

        function buildNewProductForm(id, quantity) {
            var template = [
                '<div id="command_products___name__">',
                '<div class="form-group">',
                '<input type="number" value="__value__" min="0" id="command_products___name___quantity" name="command[products][__name__][quantity]" placeholder="0" class="form-control"/>',
                '</div>',
                '</div>'
            ].join("\n");

            // Get the data-prototype explained earlier
            var newForm = template;


            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, id);

            if (quantity > 0) {
                newForm = newForm.replace(/__value__/g, quantity);
            } else {
                newForm = newForm.replace(/__value__/g, "");
            }

            //.replace(/__name__label__/g, 'Quant' + index)
            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have

            return newForm;
        }
    </script>
{% endblock %}